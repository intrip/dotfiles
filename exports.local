# Rosetta
export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"
alias ibrew='arch -x86_64 /usr/local/bin/brew'

# EDITOR
# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
 else
  export EDITOR='/usr/local/bin/nvim'
fi
alias vim='nvim'
alias vi='nvim'

# GIT
# auto push to all remotes branches
git_push_all() {
  for i in $(git remote -v | cut -f1 | sort -u)
  do
      eval "git push $i $1"
  done
}
alias gpa=git_push_all
# pull current branch
alias glh='git pull origin $(git rev-parse --abbrev-ref HEAD)'
# git fetch origin
function git_fetch_origin() {
  git fetch origin $1:$1
}
alias gfo=git_fetch_origin
# push current branch
alias gph='git push origin HEAD'
# push current branch in fork
alias gphf='git push fork $(gbp)'
# Print current branch name
alias gbp='git rev-parse --abbrev-ref HEAD | tr -d "\n"'
# Git checkout
alias gco='git checkout'
# Copy current branch name
alias gbc='gbp | pbcopy'
# status
alias gst='git status'
# commit
alias gc='git commit -v'
# commit msg
alias gcmsg='git commit -m'
# branch
alias gb='git branch'
# add
alias ga='git add'
# diff
alias gd='git diff'
# open with vi changes files
alias vigst='gst -s | grep -v "??" | awk '"'"'{ print $2}'"'"' | xargs -o nvim'

# Rubocop on last commit files. Ignores `db/schema.rb` as Rubocop normally does.
alias rubocop-head='git diff-tree --no-commit-id --name-only -r HEAD | grep -v "db/schema.rb" | xargs -o bundle exec rubocop -a'
# Rubocop on all the changed files between the current branch and master. Ignores `db/schema.rb` as Rubocop normally does.
alias rubocop-master='git diff --name-only master | grep -v "db/schema.rb" | xargs -o bundle exec rubocop -a'

# RUBY
alias b=bundle

# Serve HTML page with WebRick
alias served="ruby -r webrick -e \"s = WEBrick::HTTPServer.new(:Port => 9090, :DocumentRoot => Dir.pwd); trap('INT') { s.shutdown }; s.start\""

# Dotfiles bin path
export PATH=$PATH:~/.bin

# Local .bin/ folder for path
export PATH=$PATH:./bin

# Fzf
# This is one of many color schemes for fzf. Check the fzf wiki for more
_gen_fzf_default_opts() {
  local base03="234"
  local base02="235"
  local base01="240"
  local base00="241"
  local base0="244"
  local base1="245"
  local base2="254"
  local base3="230"
  local yellow="136"
  local orange="166"
  local red="160"
  local magenta="125"
  local violet="61"
  local blue="33"
  local cyan="37"
  local green="64"

  # fzf uses ncurses for it's UI. ncurses doesn't support 24-bit color, and
  # last time I tried, I couldn't get the ANSI 16 colors to play nicely.

  # Solarized Dark color scheme for fzf
  export FZF_DEFAULT_OPTS_DARK="
    --color fg:-1,bg:-1,hl:$blue,fg+:$base2,bg+:-1,hl+:$blue
    --color info:$yellow,prompt:$yellow,pointer:$base3,marker:$base3,spinner:$yellow
  "
  # Solarized Light color scheme for fzf
  export FZF_DEFAULT_OPTS_LIGHT="
    --color fg:-1,bg:-1,hl:$blue,fg+:$base02,bg+:-1,hl+:$blue
    --color info:$yellow,prompt:$yellow,pointer:$base03,marker:$base03,spinner:$yellow
  "

  if [ "$SOLARIZED" = "dark" ]; then
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS_DARK"
  elif [ "$SOLARIZED" = "light" ]; then
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS_LIGHT"
  else
    export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS_DARK"
  fi
}
_gen_fzf_default_opts

# Bat
export BAT_THEME="Solarized (dark)"
